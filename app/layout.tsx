import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ClerkProvider } from "@clerk/nextjs";


import { Toaster } from "@/components/ui/sonner";
import { QueryProvider } from "@/providers/query-provider";
import { SheetProvider } from "@/providers/sheet-provider";
import { ThirdwebProvider } from "thirdweb/react";

import {
  createThirdwebClient,
  getContract,
} from "thirdweb";
import { defineChain } from "thirdweb/chains";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "MFUKO",
  description: "Generated by Mburu",
};

// create the client with your clientId, or secretKey if in a server environment
const client = createThirdwebClient({
  clientId: "b7a3a8dc8bd6cb3da73c28776b90835d",
});

// connect to your contract
const contract = getContract({
  client,
  chain: defineChain(11155111),
  address: "0xe46B96B92543AA5E843d21A1bbE63320Eb1e9f49",
});


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        > 
            <ThirdwebProvider>
            <QueryProvider>
              <SheetProvider />
              <Toaster />
              {children}
            </QueryProvider>
            </ThirdwebProvider>
        </body>
      </html>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
          <QueryProvider>
            <SheetProvider />
            <Toaster />
            {children}
          </QueryProvider>
      </body>
    </html>
    </ClerkProvider>
  );
}
